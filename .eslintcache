[{"/Users/vishnuvenu/Desktop/xtra-assignment/src/App.tsx":"1","/Users/vishnuvenu/Desktop/xtra-assignment/src/index.tsx":"2","/Users/vishnuvenu/Desktop/xtra-assignment/src/components/host.tsx":"3","/Users/vishnuvenu/Desktop/xtra-assignment/src/components/home.tsx":"4","/Users/vishnuvenu/Desktop/xtra-assignment/src/components/participant.tsx":"5","/Users/vishnuvenu/Desktop/xtra-assignment/src/components/participantCard.tsx":"6"},{"size":752,"mtime":1608629711205,"results":"7","hashOfConfig":"8"},{"size":593,"mtime":1608629713695,"results":"9","hashOfConfig":"8"},{"size":5601,"mtime":1608711999502,"results":"10","hashOfConfig":"8"},{"size":2722,"mtime":1608648166050,"results":"11","hashOfConfig":"8"},{"size":4395,"mtime":1608711979709,"results":"12","hashOfConfig":"8"},{"size":1092,"mtime":1608649263781,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rw2d75",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"/Users/vishnuvenu/Desktop/xtra-assignment/src/App.tsx",[],"/Users/vishnuvenu/Desktop/xtra-assignment/src/index.tsx",[],["31","32"],"/Users/vishnuvenu/Desktop/xtra-assignment/src/components/host.tsx",["33","34","35","36","37","38"],"import React, { useState, useEffect } from 'react';\nimport { ws } from '../App';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { IconButton } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\n\nimport PeopleAltRoundedIcon from '@material-ui/icons/PeopleAltRounded';\nimport VideocamOffRoundedIcon from '@material-ui/icons/VideocamOffRounded';\nimport MicOffRoundedIcon from '@material-ui/icons/MicOffRounded';\nimport CallEndRoundedIcon from '@material-ui/icons/CallEndRounded';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop: '25px',\n  },\n  timer: {\n    color: 'red',\n    fontSize: '30px',\n  },\n  icon: {\n    borderStyle: 'solid',\n    border: 1,\n    cursor: 'pointer',\n  },\n  timerButtons: {\n    borderStyle: 'solid',\n    border: 1,\n    cursor: 'pointer',\n    height: '50px',\n    width: '50px',\n    borderRadius: '50%',\n  },\n  image: {\n    height: '400px',\n    width: '400px',\n  },\n  paperParent: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(1),\n      width: theme.spacing(16),\n      height: theme.spacing(16),\n    },\n  },\n  paper: {\n    height: '300px',\n    width: '800px',\n    margin: 'auto',\n    fontSize: '3em',\n  },\n}));\n\nfunction HostComponent(props: any) {\n  const classes = useStyles();\n\n  const [sessionId] = useState(props.match.params.sessionId);\n  const [hostId] = useState(props.match.params.hostId);\n  const [hostName] = useState(props.match.params.hostName);\n  const [participants, setParticipants] = useState([]);\n\n  useEffect(() => {\n    console.log('test');\n    const payload = {\n      method: 'get',\n      sessionId,\n      clientId: hostId,\n    };\n    if (ws.readyState == 1) {\n      ws.send(JSON.stringify(payload));\n    }\n  }, []);\n\n  const addTime = (time: number) => {\n    const payLoad = {\n      method: 'timerUpdate',\n      clientId: hostId,\n      sessionId,\n      timer: time,\n    };\n\n    ws.send(JSON.stringify(payLoad));\n  };\n\n  ws.onmessage = (message) => {\n    const response = JSON.parse(message.data);\n    console.log(response);\n\n    if (response.method == 'join' || response.method == 'get') {\n      const sessionParticipants = response.session.participants;\n      console.log(sessionParticipants);\n\n      setParticipants(sessionParticipants);\n    }\n  };\n\n  return (\n    <div>\n      <div className={classes.root}>\n        {participants.length === 0 && (\n          <div className={classes.paperParent} style={{ textAlign: 'center' }}>\n            <Paper elevation={3} className={classes.paper}>\n              <p>No participants yet</p>\n            </Paper>\n          </div>\n        )}\n\n        <Grid container spacing={1}>\n          {participants.map((participant: any) => {\n            return (\n              <Grid\n                item\n                style={{ border: 1, borderStyle: 'solid' }}\n                key={participant.clientId}\n              >\n                <img\n                  className={classes.image}\n                  src='/Placeholder_person.png'\n                  alt='placeholder'\n                ></img>\n                <p>User Name:{participant.name}</p>\n              </Grid>\n            );\n          })}\n\n          {participants.length && (\n            <Grid item container spacing={1} style={{ marginTop: '30px' }}>\n              <Grid item container xs={6} justify='flex-end' spacing={1}>\n                <Grid item>\n                  <IconButton classes={{ root: classes.icon }}>\n                    <VideocamOffRoundedIcon></VideocamOffRoundedIcon>\n                  </IconButton>\n                </Grid>\n                <Grid item>\n                  <IconButton classes={{ root: classes.icon }}>\n                    <MicOffRoundedIcon></MicOffRoundedIcon>\n                  </IconButton>\n                </Grid>\n                <Grid item>\n                  <IconButton classes={{ root: classes.icon }}>\n                    <PeopleAltRoundedIcon></PeopleAltRoundedIcon>\n                  </IconButton>\n                </Grid>\n                <Grid item>\n                  <IconButton classes={{ root: classes.icon }}>\n                    <CallEndRoundedIcon></CallEndRoundedIcon>\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid item container xs={6} spacing={1} justify='center'>\n                <Grid item>\n                  <IconButton\n                    onClick={() => addTime(15)}\n                    classes={{ root: classes.timerButtons }}\n                  >\n                    15s\n                  </IconButton>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    onClick={() => addTime(30)}\n                    classes={{ root: classes.timerButtons }}\n                  >\n                    30s\n                  </IconButton>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    onClick={() => addTime(45)}\n                    classes={{ root: classes.timerButtons }}\n                  >\n                    45s\n                  </IconButton>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    onClick={() => addTime(60)}\n                    classes={{ root: classes.timerButtons }}\n                  >\n                    60s\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          )}\n        </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default HostComponent;\n","/Users/vishnuvenu/Desktop/xtra-assignment/src/components/home.tsx",["39","40","41"],"import React, { useState, useEffect } from 'react';\nimport { ws } from '../App';\nimport TextField from '@material-ui/core/TextField';\nimport { useHistory } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  test: {\n    backgroundColor: 'red',\n  },\n}));\n\nfunction HomeComponent() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [showJoinButton, setShowJoinButton] = useState(false);\n\n  const [sessionId, setSessionId] = useState('');\n  const [clientId, setClientId] = useState('');\n  const [name, setName] = useState('');\n\n  function createRoom() {\n    const payLoad = {\n      method: 'create',\n      clientId: clientId,\n      name: name,\n    };\n\n    ws.send(JSON.stringify(payLoad));\n  }\n\n  ws.onmessage = (message) => {\n    //message.data\n    const response = JSON.parse(message.data);\n    if (response.method == 'connect') {\n      setClientId(response.clientId);\n    }\n    if (response.method == 'create') {\n      setSessionId(response.session.id);\n\n      setShowJoinButton(true);\n    }\n\n    //connect\n  };\n\n  return (\n    <div className={classes.root}>\n      <h1>Websockets</h1>\n      <Grid\n        container\n        spacing={2}\n        justify='center'\n        alignItems='center'\n        style={{ height: '400px' }}\n      >\n        <Grid>\n          <TextField\n            id='standard-basic'\n            label='Enter Name'\n            onChange={(e) => setName(e.target.value)}\n          />\n        </Grid>\n        <Grid>\n          <Button variant='contained' color='primary' onClick={createRoom}>\n            Create Room\n          </Button>\n        </Grid>\n\n        <Grid item container direction='column' spacing={2}>\n          {showJoinButton && (\n            <div>\n              <Grid item>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  onClick={() =>\n                    history.push(`/host/${name}/${clientId}/${sessionId}`)\n                  }\n                >\n                  Enter Room\n                </Button>\n              </Grid>\n\n              <Grid item>\n                <p>Use the link below to join as a participant</p>\n                <a\n                  href={`/participant/${sessionId}`}\n                >{`http:localhost:3000/participant/${sessionId}`}</a>\n              </Grid>\n            </div>\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default HomeComponent;\n","/Users/vishnuvenu/Desktop/xtra-assignment/src/components/participant.tsx",["42","43","44","45","46","47"],"import React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton } from '@material-ui/core';\nimport VideocamOffRoundedIcon from '@material-ui/icons/VideocamOffRounded';\nimport MicOffRoundedIcon from '@material-ui/icons/MicOffRounded';\nimport CallEndRoundedIcon from '@material-ui/icons/CallEndRounded';\nimport { ws } from '../App';\nimport { Howl } from 'howler';\n\nimport MediaCard from './participantCard';\n\nconst sound = new Howl({ src: ['/sound.mp3'] });\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop: '25px',\n  },\n  timer: {\n    color: 'red',\n    fontSize: '30px',\n  },\n  icon: {\n    borderStyle: 'solid',\n    border: 1,\n    cursor: 'pointer',\n  },\n}));\n\nfunction ParticipantComponent(props: any) {\n  const classes = useStyles();\n  const [timer, setTimer] = useState(0);\n  const [participants, setParticipants] = useState([]);\n  const [participantId, setParticipantId] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  const [hostName, setHostName] = useState('');\n\n  const [playSound, setPlaySound] = useState(false);\n\n  const [participantName, setParticipantName] = useState<String | null>('');\n\n  useEffect(() => {\n    setParticipantName(prompt('What is your name'));\n  }, []);\n\n  useEffect(() => {\n    if (playSound) {\n      sound.play();\n      setPlaySound(false);\n    }\n    console.log(participantName);\n  }, [timer, hostName]);\n\n  console.log(props);\n\n  ws.onmessage = (message) => {\n    //message.data\n    const response = JSON.parse(message.data);\n\n    if (response.method == 'connect') {\n      const clientId = response.clientId;\n      setParticipantId(clientId);\n\n      const sessionIdNum = props.match.params.sessionId;\n      setSessionId(sessionIdNum);\n      const payLoad = {\n        method: 'join',\n        clientId,\n        name: participantName,\n        sessionId: sessionIdNum,\n      };\n\n      ws.send(JSON.stringify(payLoad));\n    }\n    if (response.method == 'join') {\n      console.log(response);\n      const sessionParticipants = response.session.participants;\n\n      setHostName(response.hostName);\n\n      const otherParticipants = sessionParticipants.filter(\n        (participant) => participant.clientId !== participantId\n      );\n      setParticipants(otherParticipants);\n      setTimer(response.session.timer);\n    }\n\n    if (response.method == 'timerUpdate') {\n      const time = response.session.timer;\n\n      if (time == 0) {\n        setPlaySound(true);\n      }\n      setTimer(time);\n    }\n    console.log(participants, timer);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={4} container spacing={1} direction='column'>\n          {!participants.length && (\n            <div style={{ textAlign: 'center' }}>\n              <p>No other participants yet.</p>\n            </div>\n          )}\n          {participants.map((participant: any) => {\n            return (\n              <Grid item key={participant.clientId}>\n                <MediaCard participant={participant} />\n              </Grid>\n            );\n          })}\n        </Grid>\n\n        <Grid item xs={8} container direction='column'>\n          <Grid item>\n            <img\n              src='/349-3499617_person-placeholder-person-placeholder.png'\n              alt='placeholder'\n            ></img>\n          </Grid>\n          <Grid item>\n            <p>Host:{hostName}</p>\n          </Grid>\n\n          <Grid item container direction='row' justify='center' spacing={1}>\n            <Grid item>\n              <IconButton classes={{ root: classes.icon }}>\n                <VideocamOffRoundedIcon></VideocamOffRoundedIcon>\n              </IconButton>\n            </Grid>\n            <Grid item>\n              <IconButton classes={{ root: classes.icon }}>\n                <MicOffRoundedIcon></MicOffRoundedIcon>\n              </IconButton>\n            </Grid>\n            <Grid item>\n              <IconButton classes={{ root: classes.icon }}>\n                <CallEndRoundedIcon></CallEndRoundedIcon>\n              </IconButton>\n            </Grid>\n          </Grid>\n          {timer > 0 && (\n            <Grid item className={classes.timer}>\n              <p>{timer}s</p>\n            </Grid>\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default ParticipantComponent;\n","/Users/vishnuvenu/Desktop/xtra-assignment/src/components/participantCard.tsx",["48","49"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 300,\n  },\n  media: {\n    height: 300,\n  },\n});\n\nexport default function MediaCard(props: any) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image='/person-placeholder-300x300.jpg'\n          title='Contemplative Reptile'\n        />\n        <CardContent>\n          <Typography gutterBottom variant='h5' component='h2'>\n            <p>Name:{props.participant.name}</p>\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":3,"column":8,"nodeType":"56","messageId":"57","endLine":3,"endColumn":14},{"ruleId":"54","severity":1,"message":"58","line":62,"column":10,"nodeType":"56","messageId":"57","endLine":62,"endColumn":18},{"ruleId":"59","severity":1,"message":"60","line":72,"column":23,"nodeType":"61","messageId":"62","endLine":72,"endColumn":25},{"ruleId":"63","severity":1,"message":"64","line":75,"column":6,"nodeType":"65","endLine":75,"endColumn":8,"suggestions":"66"},{"ruleId":"59","severity":1,"message":"60","line":92,"column":25,"nodeType":"61","messageId":"62","endLine":92,"endColumn":27},{"ruleId":"59","severity":1,"message":"60","line":92,"column":54,"nodeType":"61","messageId":"62","endLine":92,"endColumn":56},{"ruleId":"54","severity":1,"message":"67","line":1,"column":27,"nodeType":"56","messageId":"57","endLine":1,"endColumn":36},{"ruleId":"59","severity":1,"message":"60","line":45,"column":25,"nodeType":"61","messageId":"62","endLine":45,"endColumn":27},{"ruleId":"59","severity":1,"message":"60","line":48,"column":25,"nodeType":"61","messageId":"62","endLine":48,"endColumn":27},{"ruleId":"54","severity":1,"message":"68","line":36,"column":10,"nodeType":"56","messageId":"57","endLine":36,"endColumn":19},{"ruleId":"63","severity":1,"message":"69","line":53,"column":6,"nodeType":"65","endLine":53,"endColumn":23,"suggestions":"70"},{"ruleId":"59","severity":1,"message":"60","line":61,"column":25,"nodeType":"61","messageId":"62","endLine":61,"endColumn":27},{"ruleId":"59","severity":1,"message":"60","line":76,"column":25,"nodeType":"61","messageId":"62","endLine":76,"endColumn":27},{"ruleId":"59","severity":1,"message":"60","line":89,"column":25,"nodeType":"61","messageId":"62","endLine":89,"endColumn":27},{"ruleId":"59","severity":1,"message":"60","line":92,"column":16,"nodeType":"61","messageId":"62","endLine":92,"endColumn":18},{"ruleId":"54","severity":1,"message":"71","line":5,"column":8,"nodeType":"56","messageId":"57","endLine":5,"endColumn":19},{"ruleId":"54","severity":1,"message":"55","line":8,"column":8,"nodeType":"56","messageId":"57","endLine":8,"endColumn":14},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'hostName' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'hostId' and 'sessionId'. Either include them or remove the dependency array.","ArrayExpression",["74"],"'useEffect' is defined but never used.","'sessionId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'participantName' and 'playSound'. Either include them or remove the dependency array.",["75"],"'CardActions' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},"Update the dependencies array to be: [hostId, sessionId]",{"range":"80","text":"81"},"Update the dependencies array to be: [timer, hostName, playSound, participantName]",{"range":"82","text":"83"},[1853,1855],"[hostId, sessionId]",[1480,1497],"[timer, hostName, playSound, participantName]"]